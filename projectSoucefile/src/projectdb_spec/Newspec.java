/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectdb_spec;

import static com.sun.glass.ui.Cursor.setVisible;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.IntStream;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import static projectdb_spec.Login.my;

/**
 *
 * @author AUSU
 */
public class Newspec extends javax.swing.JFrame {

    /**
     * Creates new form Newspec
     */
    public String logid ,specid;
    public String Soc="",Cpu = "", Mb = "", Ram = "", Vga = "", M2 = "", Ssd = "", Hdd = "", Psu = "", Case = "", Monitor = "", Cooler = "";
    public String state;
    public int sumprice = 0, sumprice0 = 0;
    ;
    public int[] price = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    public String[] Mbimg = new String[500];
    public String[] Cpuimg = new String[500];
    public String[] Ramimg = new String[500];
    public String[] Vgaimg = new String[500];
    public String[] Ssdimg = new String[500];
    public String[] Hddimg = new String[500];
    public String[] Psuimg = new String[500];
    public String[] M2img = new String[500];
    public String[] Caseimg = new String[500];
    public String[] Coolerimg = new String[500];
    public String[] Monitorimg = new String[500];
    public boolean Soe;
 
    public Newspec(String uid) {
        logid = uid;
        Soe = true;
     

        initComponents();
    }

    //for edit constructor
    public Newspec(String uid, String spec_id) throws SQLException {
        initComponents();
        Soe = false;
        logid = uid;
        specid=spec_id;
        setEdit(uid, spec_id);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        save = new javax.swing.JButton();
        cancle = new javax.swing.JButton();
        Sumprice = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Detial = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        data = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        isCPU = new javax.swing.JButton();
        uncpu = new javax.swing.JButton();
        cpuname = new javax.swing.JLabel();
        pricecpu = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        isMainbord = new javax.swing.JButton();
        unMb = new javax.swing.JButton();
        mbprice = new javax.swing.JLabel();
        mbname = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        isRAM = new javax.swing.JButton();
        unram = new javax.swing.JButton();
        ramname = new javax.swing.JLabel();
        ramprice = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        isVGA = new javax.swing.JButton();
        unvga = new javax.swing.JButton();
        vganame = new javax.swing.JLabel();
        vgaprice = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        isHDD = new javax.swing.JButton();
        unhdd = new javax.swing.JButton();
        hddprice = new javax.swing.JLabel();
        hddname = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        isM2 = new javax.swing.JButton();
        unm2 = new javax.swing.JButton();
        m2price = new javax.swing.JLabel();
        m2name = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        isSSD = new javax.swing.JButton();
        unssd = new javax.swing.JButton();
        ssdprice = new javax.swing.JLabel();
        ssdname = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        isPSU = new javax.swing.JButton();
        unpsu = new javax.swing.JButton();
        psuname = new javax.swing.JLabel();
        psuprice = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        ISCase = new javax.swing.JButton();
        uncase = new javax.swing.JButton();
        caseprice = new javax.swing.JLabel();
        casename = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        isCooler1 = new javax.swing.JButton();
        uncool = new javax.swing.JButton();
        coolname = new javax.swing.JLabel();
        coolprice = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        isMonitor = new javax.swing.JButton();
        unmon = new javax.swing.JButton();
        monname = new javax.swing.JLabel();
        monprice = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1353, 23, -1, 92));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        save.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\Build.jpg")); // NOI18N
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        cancle.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\back2.jpg")); // NOI18N
        cancle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancleActionPerformed(evt);
            }
        });

        Sumprice.setEditable(false);
        Sumprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SumpriceActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel12.setText("Total");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancle, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Sumprice, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Sumprice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Detial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        Detial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DetialMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Detial);

        data.setColumns(20);
        data.setRows(5);
        jScrollPane3.setViewportView(data);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 23, 590, -1));

        jScrollPane2.setBackground(new java.awt.Color(0, 102, 102));

        jPanel7.setBackground(new java.awt.Color(102, 102, 102));
        jPanel7.setPreferredSize(new java.awt.Dimension(550, 1890));

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        isCPU.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\CPU.jpg")); // NOI18N
        isCPU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isCPUActionPerformed(evt);
            }
        });

        uncpu.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\cancel.jpg")); // NOI18N
        uncpu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        uncpu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uncpuActionPerformed(evt);
            }
        });

        cpuname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        pricecpu.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(isCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(pricecpu, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(uncpu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(cpuname, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(isCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel16Layout.createSequentialGroup()
                            .addGap(34, 34, 34)
                            .addComponent(uncpu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                            .addComponent(cpuname)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(pricecpu))))
                .addGap(364, 364, 364))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        isMainbord.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\mb.jpg")); // NOI18N
        isMainbord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isMainbordActionPerformed(evt);
            }
        });

        unMb.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\cancel.jpg")); // NOI18N
        unMb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unMbActionPerformed(evt);
            }
        });

        mbprice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        mbname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(isMainbord, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mbprice, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbname, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(unMb, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(mbname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mbprice))
                    .addComponent(unMb, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isMainbord, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        isRAM.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\RAM.jpg")); // NOI18N
        isRAM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isRAMActionPerformed(evt);
            }
        });

        unram.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\cancel.jpg")); // NOI18N
        unram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unramActionPerformed(evt);
            }
        });

        ramname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        ramprice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(isRAM, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(ramprice, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(unram, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(ramname, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(ramname)
                        .addGap(18, 18, 18)
                        .addComponent(ramprice))
                    .addComponent(unram, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isRAM, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        isVGA.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\VGA.jpg")); // NOI18N
        isVGA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isVGAActionPerformed(evt);
            }
        });

        unvga.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\cancel.jpg")); // NOI18N
        unvga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unvgaActionPerformed(evt);
            }
        });

        vganame.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        vgaprice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(isVGA, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(vgaprice, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(unvga, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(vganame, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(vganame)
                        .addGap(18, 18, 18)
                        .addComponent(vgaprice))
                    .addComponent(unvga, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isVGA, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        isHDD.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\Harddisk.jpg")); // NOI18N
        isHDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isHDDActionPerformed(evt);
            }
        });

        unhdd.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\cancel.jpg")); // NOI18N
        unhdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unhddActionPerformed(evt);
            }
        });

        hddprice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        hddname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(isHDD, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(hddprice, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(unhdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(hddname, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(hddname)
                        .addGap(18, 18, 18)
                        .addComponent(hddprice))
                    .addComponent(unhdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isHDD, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        isM2.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\M2.jpg")); // NOI18N
        isM2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isM2ActionPerformed(evt);
            }
        });

        unm2.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\cancel.jpg")); // NOI18N
        unm2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unm2ActionPerformed(evt);
            }
        });

        m2price.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        m2name.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(isM2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(m2price, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(unm2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(m2name, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(m2name)
                        .addGap(18, 18, 18)
                        .addComponent(m2price))
                    .addComponent(unm2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isM2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        isSSD.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\SSD.jpg")); // NOI18N
        isSSD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isSSDActionPerformed(evt);
            }
        });

        unssd.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\cancel.jpg")); // NOI18N
        unssd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unssdActionPerformed(evt);
            }
        });

        ssdprice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        ssdname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(isSSD, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(ssdprice, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(unssd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(ssdname, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(ssdname)
                        .addGap(18, 18, 18)
                        .addComponent(ssdprice))
                    .addComponent(unssd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isSSD, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        isPSU.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\PSU.jpg")); // NOI18N
        isPSU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isPSUActionPerformed(evt);
            }
        });

        unpsu.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\cancel.jpg")); // NOI18N
        unpsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unpsuActionPerformed(evt);
            }
        });

        psuname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        psuprice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(isPSU, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(psuprice, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(unpsu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(psuname, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(psuname)
                        .addGap(18, 18, 18)
                        .addComponent(psuprice)
                        .addGap(11, 11, 11))
                    .addComponent(unpsu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isPSU, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        ISCase.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\CASE.jpg")); // NOI18N
        ISCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISCaseActionPerformed(evt);
            }
        });

        uncase.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\cancel.jpg")); // NOI18N
        uncase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uncaseActionPerformed(evt);
            }
        });

        caseprice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        casename.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ISCase, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(caseprice, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(uncase, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(casename, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel12Layout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addComponent(uncase, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel12Layout.createSequentialGroup()
                            .addComponent(casename)
                            .addGap(18, 18, 18)
                            .addComponent(caseprice)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addComponent(ISCase)
                        .addContainerGap())))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        isCooler1.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\Cooler.jpg")); // NOI18N
        isCooler1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isCooler1ActionPerformed(evt);
            }
        });

        uncool.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\cancel.jpg")); // NOI18N
        uncool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uncoolActionPerformed(evt);
            }
        });

        coolname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        coolprice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(isCooler1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(coolprice, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(uncool, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(coolname, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(isCooler1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uncool, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addComponent(coolname)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(coolprice)))))
                .addContainerGap())
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        isMonitor.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\LCD.jpg")); // NOI18N
        isMonitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isMonitorActionPerformed(evt);
            }
        });

        unmon.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\cancel.jpg")); // NOI18N
        unmon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unmonActionPerformed(evt);
            }
        });

        monname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        monprice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(isMonitor, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(monprice, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                        .addComponent(unmon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(monname, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(isMonitor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unmon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                .addComponent(monname)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(monprice)))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel7);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 23, 580, 770));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\BACK4.jpg")); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 800));

        setSize(new java.awt.Dimension(1218, 847));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SumpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SumpriceActionPerformed

    }//GEN-LAST:event_SumpriceActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed

        try {
            if (Soe) {
                my.addspec(logid, Cpu, Mb, Ram, Vga, M2, Ssd, Hdd, Psu, Case, Monitor, Cooler, sumprice);//add new spec
            } else {
                my.Udatespec( specid,Cpu, Mb, Ram, Vga, M2, Ssd, Hdd, Psu, Case, Monitor, Cooler, sumprice);;// edit spec
            }
        } catch (SQLException ex) {
            Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
        }

        setVisible(false);
        new Catalog(logid).setVisible(true);
    }//GEN-LAST:event_saveActionPerformed

    private void cancleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancleActionPerformed
        setVisible(false);
        new Catalog(logid).setVisible(true);
    }//GEN-LAST:event_cancleActionPerformed

    private void DetialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DetialMouseClicked
       DefaultTableModel model = (DefaultTableModel) Detial.getModel();
        int indextable = Detial.getSelectedRow();
        String part = model.getValueAt(indextable, 1).toString();
        int prc = Integer.parseInt(model.getValueAt(indextable, 2).toString());
        int list = Integer.parseInt(model.getValueAt(indextable, 0).toString());

        switch (state) {
            case "cpu":
            Cpu = part;
            price[0] = prc;
            File sourceimagecpu = new File(Cpuimg[list]);
            try {
                Image image = ImageIO.read(sourceimagecpu).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                ImageIcon i = new ImageIcon(image);
                isCPU.setIcon(i);
                cpuname.setText(Cpu);
                pricecpu.setText(String.valueOf(price[0]));
            } catch (IOException ex) {
                Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
            }
             try {
            ResultSet rs = my.getImage("select * from projectdb_spec.cpu where projectdb_spec.cpu.cpu_name ='" + Cpu + "'");
            while (rs.next()) {
                Soc = rs.getString("CPU_SOCKET");
              
            }
            System.out.println(Soc);
        } catch (SQLException exc) {
            System.out.println("Err: " + exc);
        }
            break;

            case "mb":
            Mb = part;
            price[1] = prc;
            File sourceimageMB = new File(Mbimg[list]);
            try {
                Image image = ImageIO.read(sourceimageMB).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                ImageIcon i = new ImageIcon(image);
                isMainbord.setIcon(i);
                mbname.setText(Mb);
                mbprice.setText(String.valueOf(price[1]));
            } catch (IOException ex) {
                Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
            }
             try {
            ResultSet rs = my.getImage("select * from projectdb_spec.MB where projectdb_spec.MB.MB_name ='" + Mb + "'");
            while (rs.next()) {
                Soc = rs.getString("MB_SOCKET");
              
            }
            System.out.println(Soc);
        } catch (SQLException exc) {
            System.out.println("Err: " + exc);
        }
            

            break;

            case "ram":
            Ram = part;
            price[2] = prc;
            File sourceimageRam = new File(Ramimg[list]);
            try {
                Image image = ImageIO.read(sourceimageRam).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                ImageIcon i = new ImageIcon(image);
                isRAM.setIcon(i);
                ramname.setText(Ram);
                ramprice.setText(String.valueOf(price[2]));
            } catch (IOException ex) {
                Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;

            case "vga":
            Vga = part;
            price[3] = prc;
            File sourceimagevga = new File(Vgaimg[list]);
            try {
                Image image = ImageIO.read(sourceimagevga).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                ImageIcon i = new ImageIcon(image);
                isVGA.setIcon(i);
                vganame.setText(Vga);
                vgaprice.setText(String.valueOf(price[3]));
            } catch (IOException ex) {
                Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;

            case "m2":
            M2 = part;
            price[4] = prc;
            File sourceimageM2 = new File(M2img[list]);
            try {
                Image image = ImageIO.read(sourceimageM2).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                ImageIcon i = new ImageIcon(image);
                isM2.setIcon(i);
                m2name.setText(M2);
                m2price.setText(String.valueOf(price[4]));
            } catch (IOException ex) {
                Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;

            case "ssd":
            Ssd = part;
            price[5] = prc;
            File sourceimagessd = new File(Ssdimg[list]);
            try {
                Image image = ImageIO.read(sourceimagessd).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                ImageIcon i = new ImageIcon(image);
                isSSD.setIcon(i);
                ssdname.setText(Ssd);
                ssdprice.setText(String.valueOf(price[5]));
            } catch (IOException ex) {
                Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;

            case "hdd":
            Hdd = part;
            price[6] = prc;
            File sourceimagehdd = new File(Hddimg[list]);
            try {
                Image image = ImageIO.read(sourceimagehdd).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                ImageIcon i = new ImageIcon(image);
                isHDD.setIcon(i);
                hddname.setText(Hdd);
                hddprice.setText(String.valueOf(price[6]));
            } catch (IOException ex) {
                Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;

            case "psu":
            Psu = part;
            price[7] = prc;
            File sourceimagepsu = new File(Psuimg[list]);
            try {
                Image image = ImageIO.read(sourceimagepsu).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                ImageIcon i = new ImageIcon(image);
                isPSU.setIcon(i);
                psuname.setText(Psu);
                psuprice.setText(String.valueOf(price[7]));
            } catch (IOException ex) {
                Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;

            case "case":
            Case = part;
            price[8] = prc;
            File sourceimagecase = new File(Caseimg[list]);
            try {
                Image image = ImageIO.read(sourceimagecase).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                ImageIcon i = new ImageIcon(image);
                ISCase.setIcon(i);
                casename.setText(Case);
                caseprice.setText(String.valueOf(price[8]));
            } catch (IOException ex) {
                Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;

            case "monitor":
            Monitor = part;
            price[9] = prc;
            File sourceimagemonitor = new File(Monitorimg[list]);
            try {
                Image image = ImageIO.read(sourceimagemonitor).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                ImageIcon i = new ImageIcon(image);
                isMonitor.setIcon(i);
                monname.setText(Monitor);
                monprice.setText(String.valueOf(price[9]));
            } catch (IOException ex) {
                Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;

            case "cooler":
            Cooler = part;
            price[10] = prc;
            File sourceimagecooler = new File(Coolerimg[list]);
            try {
                Image image = ImageIO.read(sourceimagecooler).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                ImageIcon i = new ImageIcon(image);
                isCooler1.setIcon(i);
                coolname.setText(Cooler);
                coolprice.setText(String.valueOf(price[10]));
            } catch (IOException ex) {
                Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
            }

            break;

        }

        sumprice = IntStream.of(price).sum();

        Sumprice.setText(String.valueOf(sumprice));

    }//GEN-LAST:event_DetialMouseClicked

    private void unmonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unmonActionPerformed
        monname.setText("");
        monprice.setText("");
        Monitor="";
        isMonitor.setIcon(null);
        price[9]=0;
        sumprice = IntStream.of(price).sum();
        Sumprice.setText(String.valueOf(sumprice));
        monname.setText("");
        monprice.setText("");
        isMonitor.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\LCD.jpg"));
    }//GEN-LAST:event_unmonActionPerformed

    private void isMonitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isMonitorActionPerformed
        state = "monitor";
        int i = 0;

        Detial.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{
                "List", "Model", "Price"
            }
        ));
        jScrollPane1.setViewportView(Detial);

        try {
            DefaultTableModel model = (DefaultTableModel) Detial.getModel();
            model.setRowCount(0);
            ResultSet rs = my.getData("monitor");
            while (rs.next()) {
                i++;
                Monitorimg[i] = rs.getString("image");
                String id = rs.getString("MO_NAME");
                int prc = rs.getInt("PRICE");
                model.addRow(new String[]{String.valueOf(i), id, String.valueOf(prc)});
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
    }//GEN-LAST:event_isMonitorActionPerformed

    private void uncoolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uncoolActionPerformed

        Cooler="";
        isCooler1.setIcon(null);
        price[10]=0;
        sumprice = IntStream.of(price).sum();
        Sumprice.setText(String.valueOf(sumprice));
        coolname.setText("");
        coolprice.setText("");
        isCooler1.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\Cooler.jpg"));
    }//GEN-LAST:event_uncoolActionPerformed

    private void isCooler1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isCooler1ActionPerformed
        state = "cooler";
        int i = 0;
        Detial.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{
                "List", "Model", "Price"
            }
        ));
        jScrollPane1.setViewportView(Detial);

        try {
            DefaultTableModel model = (DefaultTableModel) Detial.getModel();
            model.setRowCount(0);
            ResultSet rs = my.getData("cooler");
            while (rs.next()) {
                i++;
                Coolerimg[i] = rs.getString("image");
                String id = rs.getString("co_NAME");
                int prc = rs.getInt("PRICE");
                model.addRow(new String[]{String.valueOf(i), id, String.valueOf(prc)});
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
    }//GEN-LAST:event_isCooler1ActionPerformed

    private void uncaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uncaseActionPerformed
        casename.setText("");
        caseprice.setText("");
        Case="";
        ISCase.setIcon(null);
        price[8]=0;
        sumprice = IntStream.of(price).sum();
        Sumprice.setText(String.valueOf(sumprice));
        ISCase.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\CASE.jpg"));
    }//GEN-LAST:event_uncaseActionPerformed

    private void ISCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISCaseActionPerformed

        state = "case";
        int i = 0;

        Detial.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{
                "list", " Model", "Price"
            }
        ));
        jScrollPane1.setViewportView(Detial);

        try {
            DefaultTableModel model = (DefaultTableModel) Detial.getModel();
            model.setRowCount(0);
            ResultSet rs = my.getData("CASE");
            while (rs.next()) {
                i++;
                Caseimg[i] = rs.getString("image");
                String id = rs.getString("C_NAME");
                int price = rs.getInt("PRICE");
                model.addRow(new String[]{String.valueOf(i), id, String.valueOf(price)});
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
    }//GEN-LAST:event_ISCaseActionPerformed

    private void unpsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unpsuActionPerformed
        psuname.setText("");
        psuprice.setText("");
        Psu="";
        isPSU.setIcon(null);
        price[7]=0;
        sumprice = IntStream.of(price).sum();
        Sumprice.setText(String.valueOf(sumprice));
        isPSU.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\PSU.jpg"));
    }//GEN-LAST:event_unpsuActionPerformed

    private void isPSUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isPSUActionPerformed
        state = "psu";
        int i = 0;
        Detial.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{
                "List", "Model", "Price"
            }
        ));
        jScrollPane1.setViewportView(Detial);

        try {
            DefaultTableModel model = (DefaultTableModel) Detial.getModel();
            model.setRowCount(0);
            ResultSet rs = my.getData("PSU");
            while (rs.next()) {
                i++;
                Psuimg[i] = rs.getString("image");
                String id = rs.getString("PSU_NAME");
                int prc = rs.getInt("PRICE");
                model.addRow(new String[]{String.valueOf(i), id, String.valueOf(prc)});
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
    }//GEN-LAST:event_isPSUActionPerformed

    private void unssdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unssdActionPerformed
        ssdname.setText("");
        ssdprice.setText("");
        Ssd="";
        isSSD.setIcon(null);
        price[5]=0;
        sumprice = IntStream.of(price).sum();
        Sumprice.setText(String.valueOf(sumprice));
        isSSD.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\SSD.jpg"));
    }//GEN-LAST:event_unssdActionPerformed

    private void isSSDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isSSDActionPerformed
        state = "ssd";
        int i = 0;

        Detial.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{
                "List", "Model", "Price"
            }
        ));
        jScrollPane1.setViewportView(Detial);

        try {
            DefaultTableModel model = (DefaultTableModel) Detial.getModel();
            model.setRowCount(0);
            ResultSet rs = my.getData("SSD");
            while (rs.next()) {
                i++;
                Ssdimg[i] = rs.getString("image");
                String id = rs.getString("SSD_NAME");
                int prc = rs.getInt("PRICE");
                model.addRow(new String[]{String.valueOf(i), id, String.valueOf(prc)});
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
    }//GEN-LAST:event_isSSDActionPerformed

    private void unm2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unm2ActionPerformed
        m2name.setText("");
        m2price.setText("");
        M2="";
        isM2.setIcon(null);
        price[4]=0;
        sumprice = IntStream.of(price).sum();
        Sumprice.setText(String.valueOf(sumprice));
        isM2.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\M2.jpg"));
    }//GEN-LAST:event_unm2ActionPerformed

    private void isM2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isM2ActionPerformed

        state = "m2";
        int i = 0;
        Detial.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{
                "list", " Model", "Price"
            }
        ));
        jScrollPane1.setViewportView(Detial);

        try {
            DefaultTableModel model = (DefaultTableModel) Detial.getModel();
            model.setRowCount(0);
            ResultSet rs = my.getData("M2");
            while (rs.next()) {
                i++;
                M2img[i] = rs.getString("image");
                String id = rs.getString("M2_NAME");
                int price = rs.getInt("PRICE");
                model.addRow(new String[]{String.valueOf(i), id, String.valueOf(price)});
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
    }//GEN-LAST:event_isM2ActionPerformed

    private void unhddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unhddActionPerformed
        hddname.setText("");
        hddprice.setText("");
        Hdd="";
        isHDD.setIcon(null);
        price[6]=0;
        sumprice = IntStream.of(price).sum();
        Sumprice.setText(String.valueOf(sumprice));
        isHDD.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\Harddisk.jpg"));
    }//GEN-LAST:event_unhddActionPerformed

    private void isHDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isHDDActionPerformed
        state = "hdd";
        int i = 0;
        Detial.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{
                "List", "Model", "Price"
            }
        ));
        jScrollPane1.setViewportView(Detial);

        try {
            DefaultTableModel model = (DefaultTableModel) Detial.getModel();
            model.setRowCount(0);
            ResultSet rs = my.getData("hdd");
            while (rs.next()) {
                i++;
                Hddimg[i] = rs.getString("image");
                String id = rs.getString("HDD_NAME");
                int prc = rs.getInt("PRICE");
                model.addRow(new String[]{String.valueOf(i), id, String.valueOf(prc)});
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
    }//GEN-LAST:event_isHDDActionPerformed

    private void unvgaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unvgaActionPerformed
        vganame.setText("");
        vgaprice.setText("");
        Vga="";
        isVGA.setIcon(null);
        price[3]=0;
        sumprice = IntStream.of(price).sum();
        Sumprice.setText(String.valueOf(sumprice));
        isVGA.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\VGA.jpg"));
    }//GEN-LAST:event_unvgaActionPerformed

    private void isVGAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isVGAActionPerformed
        state = "vga";
        int i = 0;
        Detial.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{
                "list", " Model", "Price"
            }
        ));
        jScrollPane1.setViewportView(Detial);

        try {
            DefaultTableModel model = (DefaultTableModel) Detial.getModel();
            model.setRowCount(0);
            ResultSet rs = my.getData("VGA");
            while (rs.next()) {
                i++;
                Vgaimg[i] = rs.getString("image");
                String id = rs.getString("VGA_name");
                int price = rs.getInt("PRICE");
                model.addRow(new String[]{String.valueOf(i), id, String.valueOf(price)});
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
    }//GEN-LAST:event_isVGAActionPerformed

    private void unramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unramActionPerformed
        ramname.setText("");
        ramprice.setText("");
        Ram="";
        isRAM.setIcon(null);
        price[2]=0;
        sumprice = IntStream.of(price).sum();
        Sumprice.setText(String.valueOf(sumprice));
        isRAM.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\RAM.jpg"));
    }//GEN-LAST:event_unramActionPerformed

    private void isRAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isRAMActionPerformed
        state = "ram";
        int i = 0;
        Detial.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{
                "list", " Model", "Price"
            }
        ));
        jScrollPane1.setViewportView(Detial);

        try {
            DefaultTableModel model = (DefaultTableModel) Detial.getModel();
            model.setRowCount(0);
            ResultSet rs = my.getData("RAM");
            while (rs.next()) {
                i++;
                Ramimg[i] = rs.getString("image");
                String id = rs.getString("RAM_NAME");
                int price = rs.getInt("PRICE");
                model.addRow(new String[]{String.valueOf(i), id, String.valueOf(price)});
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
    }//GEN-LAST:event_isRAMActionPerformed

    private void unMbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unMbActionPerformed


        mbname.setText("");
        mbprice.setText("");
        Mb="";
        isMainbord.setIcon(null);
        price[1]=0;
        if(Cpu.equals("") && Mb.equals("")) Soc ="";
        sumprice = IntStream.of(price).sum();
        Sumprice.setText(String.valueOf(sumprice));
        isMainbord.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\mb.jpg"));
    }//GEN-LAST:event_unMbActionPerformed

    private void isMainbordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isMainbordActionPerformed
        state = "mb";
        int i = 0;
        Detial.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{
                "list", " Model", "Price"
            }
        ));
        jScrollPane1.setViewportView(Detial);

        try {
            DefaultTableModel model = (DefaultTableModel) Detial.getModel();
            model.setRowCount(0);
            ResultSet rs =null;
            if(Soc.equals(""))rs= my.getData("mb");
            else rs = my.getImage("select * from projectdb_spec.MB where projectdb_spec.MB.MB_socket ='" + Soc + "'");
            while (rs.next()) {
                i++;
                Mbimg[i] = rs.getString("image");
                String id = rs.getString("mb_name");
                int price = rs.getInt("PRICE");
                model.addRow(new String[]{String.valueOf(i), id, String.valueOf(price)});
            }

        } catch (Exception exc) {
            System.out.println("Err:MainBoard " + exc);
        }

    }//GEN-LAST:event_isMainbordActionPerformed

    private void uncpuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uncpuActionPerformed
         cpuname.setText("");
         pricecpu.setText("");

        Cpu="";
        isCPU.setIcon(null);
        price[0]=0;
        if(Cpu.equals("") && Mb.equals("")) Soc ="";
        sumprice = IntStream.of(price).sum();
        Sumprice.setText(String.valueOf(sumprice));
        isCPU.setIcon(new javax.swing.ImageIcon("C:\\Users\\AUSU\\Desktop\\projectDB_spec\\image\\imageApp\\CPU.jpg"));
    }//GEN-LAST:event_uncpuActionPerformed

    private void isCPUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isCPUActionPerformed
        state = "cpu";
        int i = 0;
        Detial.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{
                "list", " Model", "Price"
            }
        ));
        jScrollPane1.setViewportView(Detial);

        try {
            DefaultTableModel model = (DefaultTableModel) Detial.getModel();
            model.setRowCount(0);
            ResultSet rs = null;
            if(Soc.equals(""))rs = my.getData("cpu");
            else rs = my.getImage("select * from projectdb_spec.cpu where projectdb_spec.cpu.cpu_socket ='" + Soc + "'");
            while (rs.next()) {
                i++;
                Cpuimg[i] = rs.getString("image");
                String id = rs.getString("cpu_name");
                int price = rs.getInt("PRICE");

                model.addRow(new String[]{String.valueOf(i), id, String.valueOf(price)});
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }

    }//GEN-LAST:event_isCPUActionPerformed
    
    
    
    
    
    private void setEdit(String uid, String spec_id) throws SQLException {
        try {
            ResultSet dp = my.getspec(spec_id);
            while (dp.next()) {
                Cpu = dp.getString("cpu");
                Mb = dp.getString("mb");
                Ram = dp.getString("ram");
                Vga = dp.getString("vga");
                M2 = dp.getString("m2");
                Ssd = dp.getString("ssd");
                Hdd = dp.getString("hdd");
                Case = dp.getString("case");
                Psu = dp.getString("psu");
                Cooler = dp.getString("cooler");
                Monitor = dp.getString("monitor");
                sumprice = dp.getInt("price");
            }
            this.Sumprice.setText(String.valueOf(sumprice));
             System.out.println(Cpu+"\n"+Mb+"\n"+Ram+"\n"+Vga+"\n"+M2+"\n"+Ssd+"\n"+Hdd+"\n"+Case+"\n"+Psu+"\n"+Cooler+"\n"+Monitor);
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
        setcpu();
        setMb();
        setram();
        setvga();
        setm2();
        setssd();
        sethdd();
        setpsu();
        setcase();
        setmonitor();
        setcooler();

    }

    private void setcpu() {
        try {
            
            ResultSet rs = my.getImage("select * from projectdb_spec.cpu where projectdb_spec.cpu.cpu_name ='" + Cpu + "'");
            while (rs.next()) {
                Cpuimg[0] = rs.getString("image");
                price[0] = rs.getInt("price");
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
        System.out.println(price[0] + "__////__"+Cpuimg[0] );
              if(Cpuimg[0] != null){
                try {
                    File sourceimageM2 = new File(Cpuimg[0]);
                    Image image = ImageIO.read(sourceimageM2).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                    ImageIcon i = new ImageIcon(image);
                    this.isCPU.setIcon(i);
                } catch (IOException ex) {
                    Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
                }}
    }

    private void setMb() {
        try {
            
            ResultSet rs = my.getImage("select * from projectdb_spec.MB where projectdb_spec.MB.Mb_name ='" + Mb + "'");
            while (rs.next()) {
                Mbimg[0] = rs.getString("image");
                price[1] = rs.getInt("price");
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
        System.out.println(price[1] + "__////__"+Mbimg[0] );
        if(Mbimg[0]!= null){
         File sourceimageM2 = new File(Mbimg[0]);
                try {
                    Image image = ImageIO.read(sourceimageM2).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                    ImageIcon i = new ImageIcon(image);
                    this.isMainbord.setIcon(i);
                } catch (IOException ex) {
                    Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
                }}

    }

    private void setram() {
        try {
            ResultSet rs = my.getImage("select * from projectdb_spec.Ram where projectdb_spec.ram.ram_name ='" + Ram + "'");
            while (rs.next()) {
                Ramimg[0] = rs.getString("image");
                price[2] = rs.getInt("price");
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
          System.out.println(price[2] + "__////__"+Ramimg[0] );
          
          if(Ramimg[0]!= null){
           File sourceimageM2 = new File(Ramimg[0]);
                try {
                    Image image = ImageIO.read(sourceimageM2).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                    ImageIcon i = new ImageIcon(image);
                    this.isRAM.setIcon(i);
                } catch (IOException ex) {
                    Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
                }}

    }

    private void setvga() {
        try {
            ResultSet rs = my.getImage("select * from projectdb_spec.vga where projectdb_spec.vga.vga_name ='" + Vga + "'");
            while (rs.next()) {
                Vgaimg[0] = rs.getString("image");
                price[3] = rs.getInt("price");
            }
        } catch (SQLException exc) {
            System.out.println("Err: " + exc);
        }
                System.out.println(price[3] + "__////__"+Vgaimg[0] );
                if(Vgaimg[0]!= null){
                 File sourceimageM2 = new File(Vgaimg[0]);
                try {
                    Image image = ImageIO.read(sourceimageM2).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                    ImageIcon i = new ImageIcon(image);
                    this.isVGA.setIcon(i);
                } catch (IOException ex) {
                    Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
                }}
    }

    private void setm2() {

        try {
            ResultSet rs = my.getImage("select * from projectdb_spec.m2 where projectdb_spec.m2.m2_name ='" + M2 + "'");
            while (rs.next()) {
                M2img[0] = rs.getString("image");
                price[4] = rs.getInt("price");
            }
        } catch (SQLException exc) {
            System.out.println("Err: " + exc);
        }
              System.out.println(price[4] + "__////__"+M2img[0] );
              if(M2img[0]!= null){
               File sourceimageM2 = new File(M2img[0]);
                try {
                    Image image = ImageIO.read(sourceimageM2).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                    ImageIcon i = new ImageIcon(image);
                    this.isM2.setIcon(i);
                } catch (IOException ex) {
                    Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
                }}
    }

    private void setssd() {
        try {
            ResultSet rs = my.getImage("select * from projectdb_spec.ssd where projectdb_spec.ssd.ssd_name ='" + Ssd + "'");
            while (rs.next()) {
                Ssdimg[0] = rs.getString("image");
                price[5] = rs.getInt("price");
            }
        } catch (SQLException exc) {
            System.out.println("Err: " + exc);
        }
          System.out.println(price[5] + "__////__"+Ssdimg[0] );
          if(Ssdimg[0] !=null){
           File sourceimageM2 = new File(Ssdimg[0]);
                try {
                    Image image = ImageIO.read(sourceimageM2).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                    ImageIcon i = new ImageIcon(image);
                    this.isSSD.setIcon(i);
                } catch (IOException ex) {
                    Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
                }}

    }

    private void sethdd() {
        try {
            ResultSet rs = my.getImage("select * from projectdb_spec.hdd where projectdb_spec.hdd.hdd_name ='" + Hdd + "'");
            while (rs.next()) {
                Hddimg[0] = rs.getString("image");
                price[6] = rs.getInt("price");
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
          System.out.println(price[6] + "__////__"+Hddimg[0] );
          if( Hddimg[0]!= null) {
           File sourceimageM2 = new File(Hddimg[0]);
                try {
                    Image image = ImageIO.read(sourceimageM2).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                    ImageIcon i = new ImageIcon(image);
                    this.isHDD.setIcon(i);
                } catch (IOException ex) {
                    Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
                }}

          
    }
     
    
    

    private void setpsu() {
        try {
            ResultSet rs = my.getImage("select * from projectdb_spec.psu where projectdb_spec.psu.psu_name ='" + Psu + "'");
            while (rs.next()) {
                Psuimg[0] = rs.getString("image");
                price[7] = rs.getInt("price");
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
          System.out.println(price[7] + "__////__"+Psuimg[0] );
          if(Psuimg[0]!= null){
           File sourceimageM2 = new File(Psuimg[0]);
                try {
                    Image image = ImageIO.read(sourceimageM2).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                    ImageIcon i = new ImageIcon(image);
                    this.isPSU.setIcon(i);
                } catch (IOException ex) {
                    Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
                }}

    }

    private void setcase() {
        try {
            ResultSet rs = my.getImage("select * from projectdb_spec.case where projectdb_spec.case.c_name ='" + Case + "'");
            while (rs.next()) {
                Caseimg[0] = rs.getString("image");
                price[8] = rs.getInt("price");
            }
        } catch (Exception exc) {
            System.out.println("Err: " + exc);
        }
          System.out.println(price[8] + "__////__"+Caseimg[0] );
          if(Caseimg[0]!= null){
           File sourceimageM2 = new File(Caseimg[0]);
                try {
                    Image image = ImageIO.read(sourceimageM2).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                    ImageIcon i = new ImageIcon(image);
                    this.ISCase.setIcon(i);
                } catch (IOException ex) {
                    Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
                }}

    }

    private void setmonitor() {
        try {
            ResultSet rs = my.getImage("select * from projectdb_spec.monitor where projectdb_spec.monitor.mo_name ='" + Monitor + "'");
            while (rs.next()) {
                Monitorimg[0] = rs.getString("image");
                price[9] = rs.getInt("price");
            }
        } catch (SQLException exc) {
            System.out.println("Err: " + exc);
        }
          System.out.println(price[9] + "__////__"+Monitorimg[0] );
          if(Monitorimg[0]!=null){
           File sourceimageM2 = new File(Monitorimg[0]);
                try {
                    Image image = ImageIO.read(sourceimageM2).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                    ImageIcon i = new ImageIcon(image);
                    this.isMonitor.setIcon(i);
                } catch (IOException ex) {
                    Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
                }}

    }

    private void setcooler() {
        try {
            ResultSet rs = my.getImage("select * from projectdb_spec.cooler where projectdb_spec.cooler.co_name ='" + Cooler + "'");
            while (rs.next()) {
                Coolerimg[0] = rs.getString("image");
                price[10] = rs.getInt("price");
            }
        } catch (SQLException exc) {
            System.out.println("Err: " + exc);
        }
          System.out.println(price[10] + "__////__"+Coolerimg[0] );
          if(Coolerimg[0]!=null){
           File sourceimageM2 = new File(Coolerimg[0]);
                try {
                    Image image = ImageIO.read(sourceimageM2).getScaledInstance(125, 125, Image.SCALE_SMOOTH);
                    ImageIcon i = new ImageIcon(image);
                    this.isCooler1.setIcon(i);
                } catch (IOException ex) {
                    Logger.getLogger(Newspec.class.getName()).log(Level.SEVERE, null, ex);
                }}

    }
     private void  setstartimg(){
         
       
     
     
     
     
     
     
     
     }

     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Newspec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Newspec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Newspec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Newspec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Detial;
    private javax.swing.JButton ISCase;
    private javax.swing.JTextField Sumprice;
    private javax.swing.JButton cancle;
    private javax.swing.JLabel casename;
    private javax.swing.JLabel caseprice;
    private javax.swing.JLabel coolname;
    private javax.swing.JLabel coolprice;
    private javax.swing.JLabel cpuname;
    private javax.swing.JTextArea data;
    private javax.swing.JLabel hddname;
    private javax.swing.JLabel hddprice;
    private javax.swing.JButton isCPU;
    private javax.swing.JButton isCooler1;
    private javax.swing.JButton isHDD;
    private javax.swing.JButton isM2;
    private javax.swing.JButton isMainbord;
    private javax.swing.JButton isMonitor;
    private javax.swing.JButton isPSU;
    private javax.swing.JButton isRAM;
    private javax.swing.JButton isSSD;
    private javax.swing.JButton isVGA;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel m2name;
    private javax.swing.JLabel m2price;
    private javax.swing.JLabel mbname;
    private javax.swing.JLabel mbprice;
    private javax.swing.JLabel monname;
    private javax.swing.JLabel monprice;
    private javax.swing.JLabel pricecpu;
    private javax.swing.JLabel psuname;
    private javax.swing.JLabel psuprice;
    private javax.swing.JLabel ramname;
    private javax.swing.JLabel ramprice;
    private javax.swing.JButton save;
    private javax.swing.JLabel ssdname;
    private javax.swing.JLabel ssdprice;
    private javax.swing.JButton unMb;
    private javax.swing.JButton uncase;
    private javax.swing.JButton uncool;
    private javax.swing.JButton uncpu;
    private javax.swing.JButton unhdd;
    private javax.swing.JButton unm2;
    private javax.swing.JButton unmon;
    private javax.swing.JButton unpsu;
    private javax.swing.JButton unram;
    private javax.swing.JButton unssd;
    private javax.swing.JButton unvga;
    private javax.swing.JLabel vganame;
    private javax.swing.JLabel vgaprice;
    // End of variables declaration//GEN-END:variables
}
